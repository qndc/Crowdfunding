<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.atguigu.atcrowdfunding.potal.dao.ProjectMapper" >
  <resultMap id="BaseResultMap" type="com.atguigu.atcrowdfunding.bean.Project" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="money" property="money" jdbcType="BIGINT" />
    <result column="day" property="day" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="CHAR" />
    <result column="deploydate" property="deploydate" jdbcType="CHAR" />
    <result column="supportmoney" property="supportmoney" jdbcType="BIGINT" />
    <result column="supporter" property="supporter" jdbcType="INTEGER" />
    <result column="completion" property="completion" jdbcType="INTEGER" />
    <result column="memberid" property="memberid" jdbcType="INTEGER" />
    <result column="createdate" property="createdate" jdbcType="CHAR" />
    <result column="follower" property="follower" jdbcType="INTEGER" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_project
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.atguigu.atcrowdfunding.bean.Project" useGeneratedKeys="true" keyProperty="id" keyColumn="id" >
    insert into t_project (id, name, remark, 
      money, day, status, deploydate, 
      supportmoney, supporter, completion, 
      memberid, createdate, follower
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, 
      #{money,jdbcType=BIGINT}, #{day,jdbcType=INTEGER}, #{status,jdbcType=CHAR}, #{deploydate,jdbcType=CHAR}, 
      #{supportmoney,jdbcType=BIGINT}, #{supporter,jdbcType=INTEGER}, #{completion,jdbcType=INTEGER}, 
      #{memberid,jdbcType=INTEGER}, #{createdate,jdbcType=CHAR}, #{follower,jdbcType=INTEGER}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.atguigu.atcrowdfunding.bean.Project" >
    update t_project
    set name = #{name,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      money = #{money,jdbcType=BIGINT},
      day = #{day,jdbcType=INTEGER},
      status = #{status,jdbcType=CHAR},
      deploydate = #{deploydate,jdbcType=CHAR},
      supportmoney = #{supportmoney,jdbcType=BIGINT},
      supporter = #{supporter,jdbcType=INTEGER},
      completion = #{completion,jdbcType=INTEGER},
      memberid = #{memberid,jdbcType=INTEGER},
      createdate = #{createdate,jdbcType=CHAR},
      follower = #{follower,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select id, name, remark, money, day, status, deploydate, supportmoney, supporter, 
    completion, memberid, createdate, follower
    from t_project
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <select id="selectActrowIng" resultMap="BaseResultMap">
    select id, name, remark, money, day, status, deploydate, supportmoney, supporter, 
    completion, memberid, createdate, follower
    from t_project
    where id = #{id,jdbcType=INTEGER} and status = #{status,jdbcType=CHAR}
  </select>
  
  <select id="selectAll" resultMap="BaseResultMap" >
    select id, name, remark, money, day, status, deploydate, supportmoney, supporter, 
    completion, memberid, createdate, follower
    from t_project
  </select>
  <select id="selectByMemberId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select id, name, remark, money, day, status, deploydate, supportmoney, supporter, 
    completion, memberid, createdate, follower
    from t_project
    where memberid = #{id,jdbcType=INTEGER}
  </select>
  
  <!-- 此次需要动态拼接sql -->
  <select id="selectByPage" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    tp.id, 
    tp.name, 
    tp.remark, 
    tp.money, 
    tp.day, 
    tp.status, 
    tp.deploydate, 
    tp.supportmoney, 
    tp.supporter, 
    tp.completion, 
    tp.memberid, 
    tp.createdate, 
    tp.follower,
    tt.typeid
    from t_project tp
    left join t_project_type tt
    on tp.id = tt.projectid
    <if test="typeid != 0">
    	<where>
    		tt.typeid = #{typeid}
    	</where> 
    	<if test="status != 3">
    		and tp.status = #{status}
    	</if>
    </if>
    <if test="typeid == 0">
    	<if test="status != 3">
    		where tp.status = #{status}
    	</if>
    </if>
    <if test="sort == 1">
    	order by tp.deploydate desc
    </if>
    <if test="sort == 2">
    	order by tp.money desc
    </if>
    <if test="sort == 3">
    	ORDER BY tp.supporter DESC
    </if>
    limit #{startIndex},#{pagesize}
  </select>
  
</mapper>